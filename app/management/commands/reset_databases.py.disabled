"""
Comando Django per resettare completamente i database e ricreare i dati
"""
from django.core.management.base import BaseCommand
from django.core.management import call_command
from django.contrib.auth.models import User
from app.models import Agenzia, ProfiloUtente
from django.db import transaction


class Command(BaseCommand):
    """Comando per resettare completamente i database"""
    
    help = 'Reset tutti i database e ricrea i dati base'
    
    def add_arguments(self, parser):
        parser.add_argument(
            '--confirm',
            action='store_true',
            help='Conferma che vuoi cancellare tutti i dati',
        )
    
    def handle(self, *args, **options):
        if not options['confirm']:
            self.stdout.write(
                self.style.WARNING('⚠️  Questo comando cancellerà TUTTI i dati!')
            )
            self.stdout.write('Usa --confirm per procedere')
            return
            
        self.stdout.write('🗑️  Resetting databases...')
        
        try:
            # Flush tutti i database
            databases = ['default', 'goldbet_db', 'better_db']
            
            for db_name in databases:
                self.stdout.write(f'📊 Flushing database {db_name}...')
                call_command('flush', '--database', db_name, '--noinput')
            
            # Ricrea le migrazioni
            self.stdout.write('🔄 Re-running migrations...')
            call_command('migrate', '--verbosity=0')
            call_command('migrate', '--database=goldbet_db', '--verbosity=0')
            call_command('migrate', '--database=better_db', '--verbosity=0')
            
            # Ricrea le agenzie e gli utenti
            self.stdout.write('🏢 Recreating agencies and users...')
            call_command('setup_agenzie', '--create-agenzie', '--create-users')
            
            self.stdout.write(
                self.style.SUCCESS('✅ Database reset completato!')
            )
            
        except Exception as e:
            self.stdout.write(
                self.style.ERROR(f'❌ Errore durante il reset: {str(e)}')
            )
            raise